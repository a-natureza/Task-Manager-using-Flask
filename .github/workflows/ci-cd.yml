name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Bandit for Static Analysis
        run: |
          pip install bandit
          bandit -r todo_project -o bandit-report.txt
        continue-on-error: true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.txt

      - name: Build Docker image
        run: |
          docker build -t task-manager-app .

      - name: Run tests
        run: |
          docker run --rm task-manager-app pytest

      - name: Run OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.1.2/dependency-check-8.1.2-release.zip
          unzip dependency-check-8.1.2-release.zip
          ./dependency-check/bin/dependency-check.sh --project task-manager-app --out dependency-check-report --scan .

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Publish Docker image
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag task-manager-app ${{ secrets.DOCKER_USERNAME }}/task-manager-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/task-manager-app:latest

  review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Build Docker image for Review
        run: |
          docker build -t task-manager-app:review .

      - name: Deploy to Review Environment
        run: |
          docker run -d --name task-manager-review -p 5001:5000 task-manager-app:review

  deploy-stage:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Build Docker image for Stage
        run: |
          docker build -t task-manager-app:stage .

      - name: Deploy to Stage Environment
        run: |
          docker run -d --name task-manager-stage -p 5002:5000 task-manager-app:stage

  security-testing:
    runs-on: ubuntu-latest
    needs: deploy-stage
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull OWASP ZAP Image
        run: docker pull zaproxy/zap-stable

      - name: Start OWASP ZAP in Daemon Mode
        run: |
          docker run -d --name owasp-zap -p 8090:8090 \
            zaproxy/zap-stable zap.sh -daemon -host 0.0.0.0 -port 8090 \
            -config api.addrs.addr.regex=.* \
            -config api.key=rh71lkbhv1u0lvlku054j149s0

      - name: Wait for OWASP ZAP to start
        run: |
          echo "Waiting for OWASP ZAP to start..."
          for i in {1..60}; do  # Aumentar de 30 para 60 tentativas
            if curl --output /dev/null --silent --head --fail http://localhost:8090; then
              echo "OWASP ZAP is running."
              break
            fi
            echo "Still waiting for OWASP ZAP..."
            sleep 10
          done
          if ! curl --output /dev/null --silent --head --fail http://localhost:8090; then
            echo "OWASP ZAP failed to start within the timeout period."
            docker logs owasp-zap  # Verificar logs se falhar
            exit 1
          fi

      - name: Print OWASP ZAP logs
        run: docker logs owasp-zap

      - name: Install zap-cli
        run: pip install zapcli

      - name: Run Security Scan
        run: |
          zap-cli --zap-url http://localhost:8090 --apikey rh71lkbhv1u0lvlku054j149s0 quick-scan http://localhost:5002

      - name: Retrieve ZAP Report
        run: |
          zap-cli report -o zap_report.html -f html --apikey rh71lkbhv1u0lvlku054j149s0

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

      - name: Stop OWASP ZAP
        run: docker stop owasp-zap && docker rm owasp-zap
