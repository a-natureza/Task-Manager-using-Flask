services:
  app:
    build: .
    ports:
      - "5001:5000"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://app:5000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - .:/app
    environment:
      FLASK_APP: todo_project/run.py
      FLASK_ENV: development
    command: python todo_project/run.py
    networks:
      - my_network

  owasp-zap:
    image: zaproxy/zap-stable
    ports:
      - "8091:8090"
    command: zap.sh -daemon -host 0.0.0.0 -port 8090
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://owasp-zap:8090" ]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    networks:
      - my_network
    environment:
      - discovery.type=single-node

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    networks:
      - my_network
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    networks:
      - my_network

networks:
  my_network:
